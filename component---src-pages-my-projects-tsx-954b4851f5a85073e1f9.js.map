{"version":3,"sources":["webpack:///./src/components/project-card.tsx","webpack:///./src/components/projects-deck.tsx","webpack:///./src/pages/my-projects.tsx"],"names":["ProjectCard","project","imgPath","frontmatter","img","relativePath","Card","CardMedia","image","alt","title","filename","CardContent","style","textAlign","Typography","variant","color","component","excerpt","CardActions","paddingLeft","to","fields","slug","Button","size","marginLeft","ProjectsDeck","limit","query","render","data","projects","allMarkdownRemark","edges","Grid","container","spacing","margin","slice","map","item","xs","sm","key","node","id","MyProjects","Fragment","theme","marginTop"],"mappings":"iQAgEeA,EA7BK,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,QACfC,GAD+C,2BAC7BD,EAAQE,YAAYC,IAAIC,cAChD,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAON,GAChB,kBAAC,IAAD,CAAOO,IAAKR,EAAQE,YAAYO,MAAOC,SAAUT,KAEnD,kBAACU,EAAA,EAAD,CAAaC,MAAO,CAAEC,UAAW,UAC/B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,WAC5BhB,EAAQE,YAAYO,OAEvB,kBAACK,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,UAAU,KACzDjB,EAAQkB,UAGb,kBAACC,EAAA,EAAD,CAAaP,MAAO,CAAEQ,YAAa,KACjC,kBAAC,OAAD,CAAMC,GAAIrB,EAAQsB,OAAOC,KAAMP,MAAM,WACnC,kBAACQ,EAAA,EAAD,CACEC,KAAK,QACLT,MAAM,WAFR,aAIY,kBAAC,IAAD,CAAmBJ,MAAO,CAAEc,WAAY,UCF/CC,IA7CM,SAAC,GAAgC,IAA9BC,EAA8B,EAA9BA,MAA8B,yBAEpD,OACE,kBAAC,cAAD,CACEC,MAAK,aAuBLC,OAAQ,SAAAC,GACN,IAAMC,EAAWD,EAAKE,kBAAkBC,MAExC,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGzB,MAAO,CAAEC,UAAW,SAAUyB,OAAQ,IAE/DN,EAASO,MAAM,EAAGX,GAAOY,KAAI,SAAExC,GAAF,OAC5B,kBAACmC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAK5C,EAAQ6C,KAAKC,IAC1C,kBAAC,EAAD,CAAa9C,QAASA,EAAQ6C,iB,kCC5C9C,oHA0BeE,UAhBI,kBACjB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAeC,MAAOA,KACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKxC,MAAM,aACX,kBAAC,IAAD,CAAYM,QAAQ,KAAKC,MAAM,UAAUJ,MAAO,CAAE0B,OAAQ,kBAA1D,oCAGA,kBAAC,IAAD,CAAMF,WAAS,EAACC,QAAS,EAAGzB,MAAO,CAAEC,UAAW,SAAUqC,UAAW,KACnE,kBAAC,IAAD","file":"component---src-pages-my-projects-tsx-954b4851f5a85073e1f9.js","sourcesContent":["import React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Button from \"@material-ui/core/Button\"\nimport Image from \"./image\"\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\"\nimport { Link } from 'gatsby'\n\ninterface IProps {\n  project: Project\n}\n\ninterface Image {\n  relativePath: string;\n}\n\ninterface Frontmatter {\n  title: string;\n  img: Image\n}\n\ninterface Field {\n  slug: string\n}\n\ninterface Project {\n  title: string\n  frontmatter: Frontmatter\n  excerpt: string\n  fields: Field\n}\n\nconst ProjectCard = ({ project, ...props }: IProps) => {\n  const imgPath: string = project.frontmatter.img.relativePath;\n  return (\n    <Card>\n      <CardMedia image={imgPath}>\n        <Image alt={project.frontmatter.title} filename={imgPath} />\n      </CardMedia>\n      <CardContent style={{ textAlign: \"start\" }}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {project.frontmatter.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {project.excerpt}\n        </Typography>\n      </CardContent>\n      <CardActions style={{ paddingLeft: 20 }}>\n        <Link to={project.fields.slug} color=\"inherit\">\n          <Button\n            size=\"small\"\n            color=\"primary\"\n          >\n            Read More <ArrowRightAltIcon style={{ marginLeft: 5 }} />\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ProjectCard\n","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport ProjectCard from \"./project-card\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\ninterface IProps {\n  limit?: number;\n}\n\nconst ProjectsDeck = ({ limit, ...props }: IProps) => {\n\n  return(\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(sort: {fields: frontmatter___priority, order: DESC}, filter: {frontmatter: {type: {eq: \"project\"}}}) {\n            edges {\n              node {\n                id\n                excerpt\n                frontmatter {\n                  title\n                  img {\n                    relativePath\n                    name\n                  }\n                }\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `}\n\n      render={data => {\n        const projects = data.allMarkdownRemark.edges\n\n        return (\n          <Grid container spacing={3} style={{ textAlign: \"center\", margin: 0 }}>\n\n            {projects.slice(0, limit).map(( project ) => (\n              <Grid item xs={12} sm={4} key={project.node.id}>\n                <ProjectCard project={project.node} />\n              </Grid>\n            ))}\n\n          </Grid>\n        )\n      }}\n    />\n  )\n}\nexport default ProjectsDeck\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport ProjectsDeck from \"../components/projects-deck\"\nimport SEO from \"../components/seo\"\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport theme from \"../theme\"\nimport Grid from \"@material-ui/core/Grid\"\n\nconst MyProjects = () => (\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <SEO title=\"Projects\" />\n        <Typography variant=\"h4\" color=\"inherit\" style={{ margin: \"50px 0 20px 0\" }}>\n          Here's a list of all my projects\n        </Typography>\n        <Grid container spacing={3} style={{ textAlign: \"center\", marginTop: 25 }}>\n          <ProjectsDeck />\n        </Grid>\n      </Layout>\n    </ThemeProvider>\n  </React.Fragment>\n)\n\nexport default MyProjects\n"],"sourceRoot":""}