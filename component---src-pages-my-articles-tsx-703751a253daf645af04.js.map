{"version":3,"sources":["webpack:///./src/pages/my-articles.tsx","webpack:///./src/components/article-card.tsx","webpack:///./src/components/articles-deck.tsx"],"names":["MyArticles","Fragment","theme","title","variant","color","style","margin","container","spacing","textAlign","marginTop","ArticleCard","article","imgPath","frontmatter","img","relativePath","Card","CardMedia","image","alt","filename","CardContent","Typography","component","excerpt","CardActions","paddingLeft","to","fields","slug","Button","size","marginLeft","ArticlesDeck","limit","query","render","data","articles","allMarkdownRemark","edges","Grid","slice","map","item","xs","sm","key","node","id"],"mappings":"6FAAA,oHA2BeA,UAjBI,kBACjB,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAeC,MAAOA,KACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUC,MAAO,CAAEC,OAAQ,kBAA1D,sBAGA,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAGH,MAAO,CAAEI,UAAW,SAAUC,UAAW,KACnE,kBAAC,IAAD,Y,wMC6CKC,EA7BK,SAAC,GAAkC,IAAhCC,EAAgC,EAAhCA,QACfC,GAD+C,2BAC7BD,EAAQE,YAAYC,IAAIC,cAChD,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,MAAON,GAChB,kBAAC,IAAD,CAAOO,IAAKR,EAAQE,YAAYZ,MAAOmB,SAAUR,KAEnD,kBAACS,EAAA,EAAD,CAAajB,MAAO,CAAEI,UAAW,UAC/B,kBAACc,EAAA,EAAD,CAAYpB,QAAQ,KAAKC,MAAM,WAC5BQ,EAAQE,YAAYZ,OAEvB,kBAACqB,EAAA,EAAD,CAAYpB,QAAQ,QAAQC,MAAM,gBAAgBoB,UAAU,KACzDZ,EAAQa,UAGb,kBAACC,EAAA,EAAD,CAAarB,MAAO,CAAEsB,YAAa,KACjC,kBAAC,OAAD,CAAMC,GAAIhB,EAAQiB,OAAOC,KAAM1B,MAAM,WACnC,kBAAC2B,EAAA,EAAD,CACEC,KAAK,QACL5B,MAAM,WAFR,aAIY,kBAAC,IAAD,CAAmBC,MAAO,CAAE4B,WAAY,UCF/CC,IA7CM,SAAC,GAAgC,IAA9BC,EAA8B,EAA9BA,MAA8B,yBAEpD,OACE,kBAAC,cAAD,CACEC,MAAK,aAuBLC,OAAQ,SAAAC,GACN,IAAMC,EAAWD,EAAKE,kBAAkBC,MAExC,OACE,kBAACC,EAAA,EAAD,CAAMnC,WAAS,EAACC,QAAS,EAAGH,MAAO,CAAEI,UAAW,SAAUH,OAAQ,IAE/DiC,EAASI,MAAM,EAAGR,GAAOS,KAAI,SAAEhC,GAAF,OAC5B,kBAAC8B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKpC,EAAQqC,KAAKC,IAC1C,kBAAC,EAAD,CAAatC,QAASA,EAAQqC","file":"component---src-pages-my-articles-tsx-703751a253daf645af04.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport ArticlesDeck from \"../components/articles-deck\"\nimport SEO from \"../components/seo\"\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\"\nimport Typography from \"@material-ui/core/Typography\"\nimport theme from \"../theme\"\nimport Grid from \"@material-ui/core/Grid\"\n\nconst MyArticles = () => (\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <SEO title=\"Articles\" />\n        <Typography variant=\"h4\" color=\"inherit\" style={{ margin: \"50px 0 20px 0\" }}>\n          My latest articles\n        </Typography>\n        <Grid container spacing={3} style={{ textAlign: \"center\", marginTop: 25 }}>\n          <ArticlesDeck />\n        </Grid>\n\n      </Layout>\n    </ThemeProvider>\n  </React.Fragment>\n)\n\nexport default MyArticles\n","import React from \"react\"\nimport Card from \"@material-ui/core/Card\"\nimport CardMedia from \"@material-ui/core/CardMedia\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Button from \"@material-ui/core/Button\"\nimport Image from \"./image\"\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\"\nimport { Link } from 'gatsby'\n\ninterface IProps {\n  article: Article\n}\n\ninterface Image {\n  relativePath: string;\n}\n\ninterface Frontmatter {\n  title: string;\n  img: Image\n}\n\ninterface Field {\n  slug: string\n}\n\ninterface Article {\n  title: string\n  frontmatter: Frontmatter\n  excerpt: string\n  fields: Field\n}\n\nconst ArticleCard = ({ article, ...props }: IProps) => {\n  const imgPath: string = article.frontmatter.img.relativePath;\n  return (\n    <Card>\n      <CardMedia image={imgPath}>\n        <Image alt={article.frontmatter.title} filename={imgPath} />\n      </CardMedia>\n      <CardContent style={{ textAlign: \"start\" }}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {article.frontmatter.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {article.excerpt}\n        </Typography>\n      </CardContent>\n      <CardActions style={{ paddingLeft: 20 }}>\n        <Link to={article.fields.slug} color=\"inherit\">\n          <Button\n            size=\"small\"\n            color=\"primary\"\n          >\n            Read More <ArrowRightAltIcon style={{ marginLeft: 5 }} />\n          </Button>\n        </Link>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ArticleCard\n","import React from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport ArticleCard from \"./article-card\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\ninterface IProps {\n  limit?: number;\n}\n\nconst ArticlesDeck = ({ limit, ...props }: IProps) => {\n\n  return(\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark(sort: {fields: frontmatter___priority, order: DESC}, filter: {frontmatter: {type: {eq: \"article\"}}}) {\n            edges {\n              node {\n                id\n                excerpt\n                frontmatter {\n                  title\n                  img {\n                    relativePath\n                    name\n                  }\n                }\n                fields {\n                  slug\n                }\n              }\n            }\n          }\n        }\n      `}\n\n      render={data => {\n        const articles = data.allMarkdownRemark.edges\n\n        return (\n          <Grid container spacing={3} style={{ textAlign: \"center\", margin: 0 }}>\n\n            {articles.slice(0, limit).map(( article ) => (\n              <Grid item xs={12} sm={4} key={article.node.id}>\n                <ArticleCard article={article.node} />\n              </Grid>\n            ))}\n\n          </Grid>\n        )\n      }}\n    />\n  )\n}\nexport default ArticlesDeck\n"],"sourceRoot":""}